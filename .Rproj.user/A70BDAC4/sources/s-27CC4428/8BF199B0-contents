CD_all_low<-CD_all[CD_all$`Triage Class Code`=="P3 and P4",]

table(CD_all_low$DeathLabel)




CD_all_noicu<-CD_all[CD_all$num_icu==0,]
CD_all_noicu<-CD_all_noicu[CD_all_noicu$num_hd==0,]
###################
#################
#############
##########

################above is to build the final CD_all data set
################
################
################


library(dplyr)
library(tableone)
library(caret)
library(ROCR)

Uni_glmTable<-function(x){
  b<-data.frame()
  for(i in names(x)[names(x)!="DeathLabel"]){
    model<-glm(DeathLabel~.,data=subset(x,select=c("DeathLabel",i)),family=binomial,na.action= na.omit)
    a<-cbind(exp(cbind(OR = coef(model), confint.default(model))),summary(model)$coef[, "Pr(>|z|)"])
    b<-rbind(b,a)
  }
  b<-b[!grepl("Intercept", row.names(b),ignore.case = T),]
  b<-round(b,digits = 3)
  b$OR<-paste(b$OR,"(",b$`2.5 %`,"-",b$`97.5 %`,")", sep = "")
  
  
  
  return(b)
}



Multi_glmTable<-function(x){
  model<-glm(DeathLabel~.,data=x,family=binomial,na.action= na.omit)
  b<-cbind(exp(cbind(OR = coef(model), confint.default(model))),summary(model)$coef[, "Pr(>|z|)"])
  b<-b[!grepl("Intercept", row.names(b),ignore.case = T),]
  b<-round(b,digits = 3)
  b<-as.data.frame(b)
  b$OR<-paste(b$OR,"(",b$`2.5 %`,"-",b$`97.5 %`,")", sep = "")
  return(b)  
  
}
PlotROCCurve<-function(prob){
  library(ROCR)
  #prob<-predict(model.glm,newdata=X_test, type = "response")
  pred<-prediction(prob,as.numeric(y_test)-1)
  perf<-performance(pred,measure="tpr",x.measure = "fpr")
  auc<-performance(pred,measure = "auc")
  auc<-auc@y.values[[1]]
  
  
  roc.data<-data.frame(fpr=unlist(perf@x.values),
                       tpr=unlist(perf@y.values),
                       model="GLM")
  ggplot(roc.data,aes(x=fpr,ymin=0,ymax=tpr))+
    geom_ribbon(alpha=0.2)+
    geom_line(aes(y=tpr))+
    ggtitle(paste0("ROC Curve /w AUC="),auc)
  
}



####imputation for the cormobidities part:
a<-CD_all_noicu[,c("MI", "CHF", "PVD", "Stroke", "Dementia", "Pulmonary", 
             "Rheumatic", "PUD", "LiverMild", "DM", "DMcx", "Paralysis", "Renal", 
             "Cancer", "LiverSevere", "Mets", "HIV")]

a[is.na(a)]<-0


CD_all_noicu[,c("MI", "CHF", "PVD", "Stroke", "Dementia", "Pulmonary", 
          "Rheumatic", "PUD", "LiverMild", "DM", "DMcx", "Paralysis", "Renal", 
          "Cancer", "LiverSevere", "Mets", "HIV")]<-a

rm(a)


####variable selection:
##########################################################
###########################################################
###########################################################
#######BEST BEST DATA FRAME for ALL features!

CD2<-CD_all_noicu[CD_all_noicu$validity==1,]
seq<-c( "Age"       ,              "Gender"        ,          "Nationality"      ,       "Race"   ,                
        "Triage Class Code"   ,             "ConsultationWaitingTime",
        "EDBoardingTime" ,"DayofWeek","ShiftTime",       "BLOOD GAS"     ,       
        "Pulse"          ,         "Respiration"    ,         "FIO2"        ,            "SPO2"       ,            
        "BP Diastolic"     ,       "BP Systolic"      ,       "BICARBONATE"    ,         "CREATININE"    ,         
        "POTASSIUM"     ,          "SODIUM",   "DeathLabel",  "MI", "CHF", "PVD", "Stroke", "Dementia", 
        "Pulmonary", "Rheumatic", "PUD", "LiverMild", "DM", "DMcx", "Paralysis", 
        "Renal", "Cancer", "LiverSevere", "Mets", "HIV" ,  "LOS",  "Duration_of_ICU", "Num_visit_last_1yr", 
        "Num_visit_last_3yr", "Num_visit_last_5yr", "Total_Num_Surgery_last1yr", 
        "Total_Num_Surgery_last3yr", "Total_Num_Surgery_last5yr", "Total_icu_count_last1yr", 
        "Total_icu_count_last3yr", "Total_icu_count_last5yr", "Total_hd_count_last1yr", 
        "Total_hd_count_last3yr", "Total_hd_count_last5yr" , "num_icu","num_hd" )
CD2<-CD2[,seq]
options(scipen=10)




##Deep cleaning for CD2
names(CD2)[grepl("BP Diastolic",names(CD2))]<-"BP_Diastolic"
names(CD2)[grepl("BLOOD GAS",names(CD2))]<-"BLOODGAS"
names(CD2)[grepl("BP Systolic",names(CD2))]<-"BP_Systolic"
names(CD2)[grepl("Triage Class Code",names(CD2))]<-"TriageClass"



CD2<-CD2
par(mfrow=c(3,3))

#CD2$TriageWaitingTime<-ifelse(CD2$TriageWaitingTime>12,NA,CD2$TriageWaitingTime)
#density(CD2$TriageWaitingTime,na.rm=T)%>%plot

CD2$ConsultationWaitingTime<-ifelse(CD2$ConsultationWaitingTime>12,NA,CD2$ConsultationWaitingTime)
density(CD2$ConsultationWaitingTime,na.rm=T)%>%plot

CD2$EDBoardingTime<-ifelse(CD2$EDBoardingTime>72,NA,CD2$EDBoardingTime)
density(CD2$EDBoardingTime,na.rm=T)%>%plot

#levels(CD2$`Triage Class Code`)[3:4]<-"P3"
levels(CD2$TriageClass)


CD2$Pulse<-ifelse(CD2$Pulse>300|CD2$Pulse<0,NA,CD2$Pulse)
density(CD2$Pulse,na.rm=T)%>%plot

CD2$Respiration<-ifelse(CD2$Respiration>50|CD2$Respiration<0,NA,CD2$Respiration)
density(CD2$Respiration,na.rm=T)%>%plot

CD2$SPO2<-ifelse(CD2$SPO2>100|CD2$SPO2<0,NA,CD2$SPO2)
density(CD2$SPO2,na.rm=T)%>%plot

CD2$FIO2<-ifelse(CD2$FIO2>100|CD2$FIO2<0.2,NA,CD2$FIO2)
CD2$FIO2<-ifelse(CD2$FIO2<1.1,CD2$FIO2*100,CD2$FIO2)
CD2$FIO2<-ifelse(CD2$FIO2<20,NA,CD2$FIO2)
density(CD2$FIO2,na.rm=T)%>%plot

CD2$BP_Systolic<-ifelse(CD2$BP_Systolic>300,NA,CD2$BP_Systolic)
density(CD2$BP_Systolic,na.rm=T)%>%plot

CD2$BP_Diastolic<-ifelse(CD2$BP_Diastolic>180,NA,CD2$BP_Diastolic)
density(CD2$BP_Diastolic,na.rm=T)%>%plot

##calculate the NA%
colSums(is.na(CD2))
colSums(is.na(CD2))/length(CD2[,1])



##median imputation

library(caret)
preProcValues <- preProcess(CD2, method = c("medianImpute"))
CD3<- predict(preProcValues, CD2)





###random forest model
library(randomForest)
CD3$DeathLabel<-as.factor(CD3$DeathLabel)
set.seed(4)
model.rf<-randomForest(DeathLabel~.,data=CD3)
model.rf
plot(model.rf)
varImpPlot(model.rf)
varImp(model.rf)


##detailed improvement


#Descriptive analysis
vars<-seq
MD_table<-CreateTableOne(vars = vars,strata = "DeathLabel",data=CD3)
MD_table



##splliting 
set.seed(4)
testindex<-sample((1:length(CD3[,1])),100000)
trainSetCD3<-CD3[-testindex,]
testSetCD3<-CD3[testindex,]
y_test<-testSetCD3$DeathLabel


###selection 
seq<-c("Age", "Gender", "ConsultationWaitingTime", 
       "EDBoardingTime",  "BLOODGAS", "Pulse", 
       "Respiration", "FIO2", "SPO2", "BP_Diastolic", "BP_Systolic", 
       "BICARBONATE", "CREATININE", "POTASSIUM", "SODIUM", "DeathLabel", 
       "MI", "CHF", "PVD", "Stroke", "Dementia", "Pulmonary", "Rheumatic", 
       "PUD", "LiverMild", "DM", "DMcx", "Paralysis", "Renal", "Cancer", 
       "LiverSevere", "Mets", "HIV",  "Num_visit_last_1yr", 
       "Num_visit_last_3yr", "Num_visit_last_5yr", "Total_Num_Surgery_last1yr", 
       "Total_Num_Surgery_last3yr", "Total_Num_Surgery_last5yr", "Total_icu_count_last1yr", 
       "Total_icu_count_last3yr", "Total_icu_count_last5yr", "Total_hd_count_last1yr", 
       "Total_hd_count_last3yr", "Total_hd_count_last5yr")
trainSetCD3<-trainSetCD3[,seq]

###selection from clinical persperctive
seq<-c("Age", "Gender",  "ConsultationWaitingTime", 
       "EDBoardingTime", "BLOODGAS", "Pulse", 
       "Respiration", "FIO2", "SPO2", "BP_Diastolic", "BP_Systolic", 
       "BICARBONATE", "CREATININE", "POTASSIUM", "SODIUM", "DeathLabel", 
       "MI", "CHF", "PVD", "Stroke", "Dementia", "Pulmonary", 
       "LiverMild", "DM", "DMcx", "Renal", "Cancer", 
       "LiverSevere", "Mets", "HIV",  "Num_visit_last_1yr", 
       "Num_visit_last_5yr", "Total_Num_Surgery_last1yr"
)
trainSetCD3<-trainSetCD3[,seq]


Uni_glmTable(trainSetCD3)



full1 <- glm(DeathLabel ~., family = binomial(link="logit"), data = trainSetCD3)
y_pred<-predict(full1,newdata=testSetCD3, type = "response")
PlotROCCurve(y_pred)


UniTbale<-Uni_glmTable(trainSetCD3)
#MultiTbale<-Multi_glmTable(trainSetCD3)
print(UniTbale)
